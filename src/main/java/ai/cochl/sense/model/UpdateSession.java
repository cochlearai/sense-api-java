/*
 * Cochl.Sense API
 * Cochl.Sense API allows to detect what is contained inside sound data. Send audio data over the internet to discover what it contains.  ``` npx @openapitools/openapi-generator-cli generate -i openapi.json -g python -o python-client ``` 
 *
 * The version of the OpenAPI document: v1.0.0
 * Contact: support@cochl.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ai.cochl.sense.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * modify session state 
 */
@ApiModel(description = "modify session state ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateSession {
  public static final String SERIALIZED_NAME_MAKE_READONLY = "make_readonly";
  @SerializedName(SERIALIZED_NAME_MAKE_READONLY)
  private Boolean makeReadonly;

  public UpdateSession() { 
  }

  public UpdateSession makeReadonly(Boolean makeReadonly) {
    
    this.makeReadonly = makeReadonly;
    return this;
  }

   /**
   * If set to true, will set session state to readonly  *Note that setting make_readonly to false once the session is readonly will not make the session writable again* 
   * @return makeReadonly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to true, will set session state to readonly  *Note that setting make_readonly to false once the session is readonly will not make the session writable again* ")

  public Boolean getMakeReadonly() {
    return makeReadonly;
  }


  public void setMakeReadonly(Boolean makeReadonly) {
    this.makeReadonly = makeReadonly;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSession updateSession = (UpdateSession) o;
    return Objects.equals(this.makeReadonly, updateSession.makeReadonly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(makeReadonly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSession {\n");
    sb.append("    makeReadonly: ").append(toIndentedString(makeReadonly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

