/*
 * Cochl. Sense API
 * Cochl. Sense API allows to detect what is contained inside sound. Send audio data over the internet and discover what it contains  That page contains the openapi specification of Cochl. Sense API. Feel free to *download* and use the specification as you wish. For instance,  you could generate any client to interact with our backend by using  [openapi generator](https://openapi-generator.tech/). With `npx` and `java`  installed locally, python client could be generated by running    ``` npx @openapitools/openapi-generator-cli generate -i openapi.json -g python -o python-client ``` 
 *
 * The version of the OpenAPI document: v0.0.1
 * Contact: support@cochl.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ai.cochl.sense.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * contains the range of elements that have been returned for a given  collection 
 */
@ApiModel(description = "contains the range of elements that have been returned for a given  collection ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Page {
  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "next_token";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;


  public Page offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * index of the first return element 
   * minimum: 0
   * @return offset
  **/
  @ApiModelProperty(example = "2048", required = true, value = "index of the first return element ")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public Page count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * the number of elements that have been returned 
   * minimum: 0
   * maximum: 1024
   * @return count
  **/
  @ApiModelProperty(example = "1024", required = true, value = "the number of elements that have been returned ")

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    this.count = count;
  }


  public Page total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * the total number of available element in the collection at the moment 
   * minimum: 0
   * @return total
  **/
  @ApiModelProperty(example = "4096", required = true, value = "the total number of available element in the collection at the moment ")

  public Integer getTotal() {
    return total;
  }


  public void setTotal(Integer total) {
    this.total = total;
  }


  public Page nextToken(String nextToken) {
    
    this.nextToken = nextToken;
    return this;
  }

   /**
   * next token can be used in the next page request to get following  results. If not present, it means that page has reach the end of  collection 
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "next token can be used in the next page request to get following  results. If not present, it means that page has reach the end of  collection ")

  public String getNextToken() {
    return nextToken;
  }


  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Page page = (Page) o;
    return Objects.equals(this.offset, page.offset) &&
        Objects.equals(this.count, page.count) &&
        Objects.equals(this.total, page.total) &&
        Objects.equals(this.nextToken, page.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offset, count, total, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Page {\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

