/*
 * Cochl.Sense API
 * Cochl.Sense API allows to detect what is contained inside sound data. Send audio data over the internet to discover what it contains.  ``` npx @openapitools/openapi-generator-cli generate -i openapi.json -g python -o python-client ``` 
 *
 * The version of the OpenAPI document: v1.0.0
 * Contact: support@cochl.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ai.cochl.sense.model;

import java.util.Objects;
import java.util.Arrays;
import ai.cochl.sense.model.AudioType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Options to create a new session.  Make sure that specified type and content_type are compatible. [more info](https://docs.cochl.ai/todo) 
 */
@ApiModel(description = "Options to create a new session.  Make sure that specified type and content_type are compatible. [more info](https://docs.cochl.ai/todo) ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateSession {
  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private AudioType type;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private String service;

  public static final String SERIALIZED_NAME_METADATAS = "metadatas";
  @SerializedName(SERIALIZED_NAME_METADATAS)
  private Map<String, String> metadatas = null;

  public static final String SERIALIZED_NAME_TOTAL_SIZE = "total_size";
  @SerializedName(SERIALIZED_NAME_TOTAL_SIZE)
  private Integer totalSize;

  public CreateSession() { 
  }

  public CreateSession contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Type of audio to send.
   * @return contentType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "audio/x-raw; rate=44100; format=s24le", required = true, value = "Type of audio to send.")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public CreateSession type(AudioType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AudioType getType() {
    return type;
  }


  public void setType(AudioType type) {
    this.type = type;
  }


  public CreateSession service(String service) {
    
    this.service = service;
    return this;
  }

   /**
   * Type of audio service. Check [service documentation](https://docs.cochl.ai/todo) for an exaustive list of available services 
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of audio service. Check [service documentation](https://docs.cochl.ai/todo) for an exaustive list of available services ")

  public String getService() {
    return service;
  }


  public void setService(String service) {
    this.service = service;
  }


  public CreateSession metadatas(Map<String, String> metadatas) {
    
    this.metadatas = metadatas;
    return this;
  }

  public CreateSession putMetadatasItem(String key, String metadatasItem) {
    if (this.metadatas == null) {
      this.metadatas = new HashMap<>();
    }
    this.metadatas.put(key, metadatasItem);
    return this;
  }

   /**
   * Type of audio session&#39;s metadatas. Check [metadatas documentation](https://docs.cochl.ai/todo) for an exaustive list of available metadatas 
   * @return metadatas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of audio session's metadatas. Check [metadatas documentation](https://docs.cochl.ai/todo) for an exaustive list of available metadatas ")

  public Map<String, String> getMetadatas() {
    return metadatas;
  }


  public void setMetadatas(Map<String, String> metadatas) {
    this.metadatas = metadatas;
  }


  public CreateSession totalSize(Integer totalSize) {
    
    this.totalSize = totalSize;
    return this;
  }

   /**
   * If set, it allows to automatically change the state of the session to &#x60;readonly&#x60; when at least &#x60;total_size&#x60; bytes of audio chunk has been uploaded.  For stream, this can be used to limit the maximum duration of the session.  For a file, this allows to automatically start inferencing when the whole file has been sent. We recommend to set the size for files as it allows to do one less API call to start the inferencing 
   * minimum: 1
   * @return totalSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set, it allows to automatically change the state of the session to `readonly` when at least `total_size` bytes of audio chunk has been uploaded.  For stream, this can be used to limit the maximum duration of the session.  For a file, this allows to automatically start inferencing when the whole file has been sent. We recommend to set the size for files as it allows to do one less API call to start the inferencing ")

  public Integer getTotalSize() {
    return totalSize;
  }


  public void setTotalSize(Integer totalSize) {
    this.totalSize = totalSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSession createSession = (CreateSession) o;
    return Objects.equals(this.contentType, createSession.contentType) &&
        Objects.equals(this.type, createSession.type) &&
        Objects.equals(this.service, createSession.service) &&
        Objects.equals(this.metadatas, createSession.metadatas) &&
        Objects.equals(this.totalSize, createSession.totalSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentType, type, service, metadatas, totalSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSession {\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    metadatas: ").append(toIndentedString(metadatas)).append("\n");
    sb.append("    totalSize: ").append(toIndentedString(totalSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

